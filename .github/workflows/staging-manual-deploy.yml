name: Staging Manual Deploy

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Branch to deploy to staging'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - main
      confirmation:
        description: 'Type "DEPLOY-TO-STAGING" to confirm'
        required: true
        type: string

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_STG }}

jobs:
  validate-deployment:
    name: Validate Deployment Request
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate Confirmation
      if: github.event.inputs.confirmation != 'DEPLOY-TO-STAGING'
      run: |
        echo "‚ùå Invalid confirmation. Please type exactly: DEPLOY-TO-STAGING"
        exit 1
        
    - name: Validate Source Branch
      run: |
        echo "‚úÖ Deploying ${{ github.event.inputs.source_branch }} to staging"
        echo "‚úÖ Confirmation received: ${{ github.event.inputs.confirmation }}"

  deploy-to-staging:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    needs: validate-deployment
    
    steps:
    - name: Checkout Source Branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.source_branch }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    - name: Run Build Test
      run: CI=false npm run build
      
    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=staging --token=${{ secrets.VERCEL_TOKEN }}

    - name: Use Staging Vercel Configuration
      run: cp vercel.staging.json vercel.json

    - name: Build Project Artifacts
      run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

    - name: Deploy to Staging Environment
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  staging-health-check:
    name: Staging Health Check
    runs-on: ubuntu-latest
    needs: deploy-to-staging
    
    steps:
    - name: Wait for Deployment
      run: sleep 60

    - name: Test Staging Environment
      run: curl -f https://nna-registry-frontend-stg.vercel.app/ || exit 1

    - name: Notify Success
      if: success()
      run: |
        echo "üéâ Staging deployment successful!"
        echo "üîó URL: https://nna-registry-frontend-stg.vercel.app"

    - name: Notify Failure
      if: failure()
      run: |
        echo "‚ùå Staging deployment failed or unhealthy"
        exit 1