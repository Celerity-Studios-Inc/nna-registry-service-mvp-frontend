name: Deploy to Vercel
# NOTE: This workflow has been disabled. Use Vercel GitHub integration instead.
# See VERCEL_SETUP.md for instructions.

on:
  # Disable automatic triggers
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Create production environment file
        run: |
          echo "REACT_APP_API_URL=/api" > .env.production
          echo "REACT_APP_USE_MOCK_API=true" >> .env.production
          cat .env.production
        
      - name: Build project
        run: |
          echo "Building project..."
          CI=false npm run build
          echo "Build completed successfully"
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Deploy to Vercel
        id: deploy-vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "Using Vercel CLI to deploy..."
          # Deploy directly without pulling environment information
          DEPLOYMENT_URL=$(vercel --token "${VERCEL_TOKEN}" --prod --confirm)
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "Deployed to $DEPLOYMENT_URL"
      
      - name: Verify deployment
        run: |
          if [ -z "${{ steps.deploy-vercel.outputs.deployment_url }}" ]; then
            echo "::warning::No deployment URL was returned by Vercel, deployment may have failed."
            exit 1
          else
            echo "::notice::Deployment successful! Site is live at ${{ steps.deploy-vercel.outputs.deployment_url }}"
            echo "Running basic health check..."
            
            # Wait a bit for the deployment to stabilize
            sleep 10
            
            # Basic health check
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "${{ steps.deploy-vercel.outputs.deployment_url }}")
            if [[ "$STATUS" == "200" || "$STATUS" == "301" || "$STATUS" == "302" ]]; then
              echo "::notice::Health check passed! Site is responding with status code $STATUS"
            else
              echo "::warning::Health check failed! Site responded with status code $STATUS"
            fi
          fi
      
      - name: Comment on commit
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue, repo } = context;
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `âœ… Deployment complete! Your application is live at: ${{ steps.deploy-vercel.outputs.deployment_url }}`
            });