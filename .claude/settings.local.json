{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(tsc:*)",
      "Bash(mkdir:*)",
      "Bash(npm run build:*)",
      "Bash(npm start)",
      "Bash(npm install:*)",
      "Bash(PORT=3001 npm start)",
      "Bash(curl:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(find:*)",
      "Bash(cat:*)",
      "Bash(git commit:*)",
      "Bash(vercel:*)",
      "Bash(chmod:*)",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(npm install:*)",
      "Bash(vercel:*)",
      "Bash(curl:*)",
      "Bash(echo:*)",
      "Bash(ls:*)",
      "Bash(node:*)",
      "Bash(npx serve:*)",
      "Bash(command -v:*)",
      "WebFetch(domain:registry.reviz.dev)",
      "Bash(npm run start:*)",
      "Bash(git rm:*)",
      "Bash(git revert:*)",
      "Bash(./scripts/update-workflows.sh:*)",
      "Bash(sed:*)",
      "Bash(cp:*)",
      "Bash(git restore:*)",
      "Bash(CI=false npm run build)",
      "Bash(git switch:*)",
      "Bash(npm run tsc:*)",
      "Bash(npx tsc:*)",
      "Bash(npm build:*)",
      "Bash(npm --version)",
      "Bash(npm run test:ci:*)",
      "Bash(npm test:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run:*)",
      "Bash(npx kill-port:*)",
      "Bash(pkill:*)",
      "Bash(touch:*)",
      "Bash(NODE_OPTIONS=--max_old_space_size=4096 npm test)",
      "Bash(npm test:*)",
      "Bash(git pull:*)",
      "WebFetch(domain:github.com)",
      "Bash(if [ -f \"/Users/ajaymadhok/nna-registry-workspace/nna-registry-service-mvp-frontend/SUBCATEGORY_GRID_LAYOUT_FIX.md\" ])",
      "Bash(then echo \"File exists\")",
      "Bash(else echo \"File does not exist\")",
      "Bash(fi)",
      "Bash(rg:*)",
      "Bash(bash:*)",
      "Bash(git grep:*)",
      "Bash(CI=true npm test -- --testPathPattern=\"AssetRegistrationWrapper\" --passWithNoTests)",
      "Bash(CI=true npm run build)",
      "Bash(git submodule:*)",
      "Bash(git log:*)",
      "Bash(gh workflow run:*)",
      "Bash(gh run list:*)",
      "Bash(git remote set-url:*)",
      "Bash(git rev-parse:*)",
      "Bash(npm ls:*)",
      "Bash(./kill-port-3000.sh:*)",
      "Bash(awk:*)",
      "Bash(git tag:*)",
      "Bash(git reset:*)"
    ],
    "deny": []
  }
}