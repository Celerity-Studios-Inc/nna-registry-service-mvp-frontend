name: Frontend CI/CD

# Automated CI/CD pipeline for frontend deployment
on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
          
      - name: Type check
        run: npm run tsc --noEmit
        
      - name: Build
        run: npm run build
        env:
          CI: false
          REACT_APP_API_URL: https://registry.reviz.dev/api
          REACT_APP_REAL_API_URL: https://registry.reviz.dev/api
          REACT_APP_ENV: production
          REACT_APP_USE_MOCK_DATA: false
          GENERATE_SOURCEMAP: false

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: |
          echo "Pulling Vercel environment information..."
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          echo "Environment information pulled successfully"

      - name: Build Project Artifacts
        run: |
          echo "Building project artifacts..."
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          echo "Build completed successfully"

      - name: Deploy Project Artifacts to Vercel
        run: |
          echo "Deploying to Vercel..."
          DEPLOY_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "Deployment URL: $DEPLOY_URL"
          echo "::set-output name=deploy_url::$DEPLOY_URL" 